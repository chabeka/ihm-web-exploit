import { Component, Output, EventEmitter } from '@angular/core';
import { Router } from '@angular/router';
import { FaceSnapsService } from '../services/face-snaps-service';
import { Environnement } from '../models/environnement.model';
import { EnvUpdateService } from '../services/env-update-service';
import { DocumentsServiceService } from '../services/documents-service.service';

@Component({
  selector: 'app-landing-page',
  templateUrl: './landing-page.component.html',
  styleUrls: ['./landing-page.component.scss']
})
export class LandingPageComponent {
  tabEnvironnement!: Environnement[] ;
  selectedEnv! : string;
  env! : Environnement;

  @Output()
  platetforme : EventEmitter<Environnement> = new EventEmitter();
  
  constructor(
    private router: Router, 
    private faceSnapsService : FaceSnapsService, 
    private envUpdateService: EnvUpdateService,
    private documentsService: DocumentsServiceService){}
  
  onContinue(): void{
    this.router.navigateByUrl('facesnaps');
  }

  ngOnInit(){
    /*this.documentsService.getDocuments().subscribe({
      next : faceSnaps => {this.tabEnvironnement = faceSnaps;
      console.log(this.tabEnvironnement);}
    });
    
    this.documentsService.getDocument("Developpement - GNT").subscribe(val => {
      this.env = val!;
      console.log(this.env);
      this.env.dfceTimeout = 180001;
      this.documentsService.updateDocument(this.env).subscribe()
    });*/

    
    this.faceSnapsService.getAllFaceSnaps().subscribe({
      next : faceSnaps => this.tabEnvironnement = faceSnaps
    });

    this.faceSnapsService.getSnapByIdWithError("Developpement - GNT").subscribe(val => {
      this.env = val!;
      console.log(this.env);
    });
    
    
  }

  onSelectedChange(value: Event){
    console.log(value);
    if(this.env){
      this.faceSnapsService.updateHero(this.env).subscribe();
    }
    let nomEnv = value + "";
    this.faceSnapsService.getSnapByIdWithError(nomEnv).subscribe(val => {
      this.env = val!;
      console.log(this.env);
      this.env.dfceTimeout = 180001
      // Mise Ã  jour du nom de l'environnement
      this.envUpdateService.updateEnvName(this.env);
    });
    
    
  }
}
